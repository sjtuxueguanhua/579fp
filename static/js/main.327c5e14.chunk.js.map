{"version":3,"sources":["components/WeatherPage.js","api/WeatherApi.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherPage","weatherData","setWeatherData","useState","console","log","useEffect","async","data","lat","arguments","length","undefined","lon","response","axios","get","concat","error","fetchWeatherData","loadData","React","createElement","main","temp","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"oMAuBeA,MApBKA,KAClB,MAAOC,EAAaC,GAAkBC,mBAAS,MAW/C,OAVAC,QAAQC,IAAI,kBACZC,oBAAU,KACSC,WACf,MAAMC,QCFoBD,iBAA+B,IAAxBE,EAAGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,MAAMG,EAAGH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,MACnD,IACE,MAAMI,QAAiBC,IAAMC,IAAG,GAAAC,OALnB,kDAK+B,SAAAA,OAAQR,EAAG,SAAAQ,OAAQJ,EAAG,WAAAI,OAN1C,qCASxB,OAFAb,QAAQC,IAAI,uBAAuBS,GAE5BA,EAASN,KAChB,MAAOU,GAEP,OADAd,QAAQc,MAAM,+BAAgCA,GACvC,MDNcC,GACnBjB,EAAeM,IAEjBY,IACC,IACHhB,QAAQC,IAAI,kBAAkBJ,GAI5BoB,IAAAC,cAAA,WACGrB,GAAeoB,IAAAC,cAAA,SAAG,oBAAkBrB,EAAYsB,KAAKC,KAAK,WEHlDC,MAPf,WACE,OAGEJ,IAAAC,cAACtB,EAAW,OCAD0B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtB,IAAAC,cAACD,IAAMuB,WAAU,KACfvB,IAAAC,cAACG,EAAG,QAORC","file":"static/js/main.327c5e14.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchWeatherData } from '../api/WeatherApi';\r\n\r\nconst WeatherPage = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  console.log('something here');\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const data = await fetchWeatherData();\r\n      setWeatherData(data);\r\n    };\r\n    loadData();\r\n  }, []);\r\n  console.log('weatherdata is ',weatherData)\r\n\r\n  return (\r\n\r\n    <div>\r\n      {weatherData && <p>Current Weather: {weatherData.main.temp}Â°C</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherPage;\r\n","import axios from 'axios';\r\n\r\nconst OPENWEATHER_API_KEY = '4486282242f23e0a063bc7ca6ccfa84e'; \r\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\r\n\r\n\r\nexport const fetchWeatherData = async (lat=44.34,lon=10.99) => { \r\n  try {\r\n    const response = await axios.get(`${BASE_URL}?lat=${lat}&lon=${lon}&appid=${OPENWEATHER_API_KEY}`);\r\n    console.log('This is fetched here',response)\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching weather data:\", error);\r\n    return null; \r\n  }\r\n};\r\n","// import logo from './logo.svg';\nimport React from 'react'; \nimport './App.css';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport WeatherPage from './components/WeatherPage';\n\n\nfunction App() {\n  return (\n\n\n    <WeatherPage/>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
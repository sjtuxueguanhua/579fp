{"version":3,"sources":["api/NasaApi.js","components/NasaMediaCarousel.js","api/WeatherApi.js","utils/cities.js","components/WeatherPage.js","components/NasaPage.js","components/NavbarComponent.js","components/CMEAnalysis.js","App.js","reportWebVitals.js","index.js"],"names":["NASA_API_KEY","formatDate","date","toISOString","split","fetchCMEAnalysis","async","startDate","get30DaysAgoDate","Date","setDate","getDate","endDate","axios","get","concat","data","NasaMediaCarousel","mediaData","setMediaData","useState","searchQuery","setSearchQuery","useEffect","params","q","media_type","collection","items","error","console","fetchNasaMedia","fetchData","React","createElement","Fragment","className","type","value","onChange","event","input","target","sanitizedInput","trim","placeholder","Carousel","length","map","media","index","Item","key","links","src","href","alt","title","Caption","description","fetchWeatherData","lat","arguments","undefined","lon","cities","USA","New York","Los Angeles","Chicago","Houston","Phoenix","Philadelphia","San Antonio","San Diego","Dallas","San Jose","Austin","Jacksonville","Fort Worth","Columbus","San Francisco","Charlotte","Indianapolis","Seattle","Denver","Washington D.C.","Boston","UK","London","Birmingham","Leeds","Glasgow","Sheffield","Bradford","Manchester","Edinburgh","Liverpool","Bristol","Cardiff","Belfast","Leicester","Wakefield","Coventry","Nottingham","Newcastle","Sunderland","Brighton","Kingston upon Hull","France","Paris","Marseille","Lyon","Toulouse","Nice","Nantes","Strasbourg","Montpellier","Bordeaux","Lille","Rennes","Reims","Le Havre","Cergy-Pontoise","Saint-Etienne","Toulon","Angers","Grenoble","Dijon","Nimes","Japan","Tokyo","Yokohama","Osaka","Nagoya","Sapporo","Fukuoka","Kobe","Kyoto","Kawasaki","Saitama","Hiroshima","Sendai","Chiba","Sakai","Shizuoka","Kumamoto","Okayama","Hamamatsu","Kagoshima","Funabashi","Germany","Berlin","Hamburg","Munich","Cologne","Frankfurt","Stuttgart","Dusseldorf","Dortmund","Essen","Leipzig","Bremen","Dresden","Hanover","Nuremberg","Duisburg","Bochum","Wuppertal","Bielefeld","Bonn","Mannheim","Karlsruhe","Wiesbaden","Munster","Gelsenkirchen","Augsburg","Monchengladbach","Braunschweig","Mexico","Mexico City","Guadalajara","Monterrey","Puebla","Toluca","Ethiopia","Addis Ababa","Dire Dawa","Mek'ele","Gondar","Bahir Dar","Philippines","Quezon City","Manila","Davao City","Caloocan","Cebu City","Egypt","Cairo","Alexandria","Giza","Shubra El-Kheima","Port Said","Vietnam","Hanoi","Ho Chi Minh City","Hai Phong","Can Tho","Da Nang","DR Congo","Kinshasa","Lubumbashi","Mbuji-Mayi","Kananga","Kisangani","Turkey","Istanbul","Ankara","Izmir","Bursa","Adana","Iran","Tehran","Mashhad","Isfahan","Karaj","Tabriz","Thailand","Bangkok","Nonthaburi","Nakhon Ratchasima","Chiang Mai","Hat Yai","Brazil","Sao Paulo","Rio de Janeiro","Salvador","Fortaleza","Belo Horizonte","WeatherPage","weatherData","setWeatherData","setLat","setLon","selectedCountry","setSelectedCountry","selectedCity","setSelectedCity","setError","isValidCoordinate","num","parseFloat","isNaN","loadData","kelvinToCelsius","kelvin","toFixed","onSubmit","preventDefault","log","e","defaultValue","disabled","Object","keys","country","cityCoords","then","city","name","sys","main","temp","feels_like","weather","humidity","wind","speed","visibility","pressure","clouds","all","sunrise","toLocaleTimeString","sunset","NasaPage","nasaData","setNasaData","fetchNasaData","getNasaData","url","explanation","NavbarComponent","Navbar","expand","Container","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","CMEAnalysis","cmeAnalysisData","setCmeAnalysisData","getCMEData","cardVariants","borderVariants","Row","xs","md","cme","Col","Card","bg","toLowerCase","border","text","style","width","marginBottom","Body","Title","Text","time21_5","latitude","longitude","halfAngle","isMostAccurate","associatedCMEID","note","catalog","link","rel","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.20bf1327.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst NASA_API_KEY = 'ot4mbzwtIPW9eN4oTMPtbxIhIWtU6v2RZNBAC319'; \r\nconst NASA_API_URL = 'https://api.nasa.gov/';\r\n\r\nconst DONKI_API_URL = 'https://api.nasa.gov/DONKI/';\r\n\r\n//APOD API\r\nexport const fetchNasaData = async () => {\r\n  try {\r\n    const response = await axios.get(`${NASA_API_URL}planetary/apod?api_key=${NASA_API_KEY}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching NASA data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\nconst formatDate = (date) => date.toISOString().split('T')[0];\r\n\r\nconst get30DaysAgoDate = () => {\r\n  const date = new Date();\r\n  date.setDate(date.getDate() - 30);\r\n  return formatDate(date);\r\n};\r\n\r\nexport const fetchCMEAnalysis = async () => {\r\n  const startDate = get30DaysAgoDate();\r\n  const endDate = formatDate(new Date());\r\n  const response = await axios.get(`${DONKI_API_URL}CMEAnalysis?startDate=${startDate}&endDate=${endDate}&mostAccurateOnly=true&speed=500&halfAngle=30&catalog=ALL&api_key=${NASA_API_KEY}`);\r\n  return response.data;\r\n};\r\n\r\n\r\n\r\nconst NASA_IMAGES_API_URL = 'https://images-api.nasa.gov';\r\n\r\nexport const fetchNasaMedia = async (searchQuery) => {\r\n  try {\r\n    const response = await axios.get(`${NASA_IMAGES_API_URL}/search`, {\r\n      params: {\r\n        q: searchQuery,\r\n        media_type: 'image,video'\r\n      }\r\n    });\r\n    return response.data.collection.items;\r\n  } catch (error) {\r\n    console.error(\"Error fetching NASA media:\", error);\r\n    return [];\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport { fetchNasaMedia } from '../api/NasaApi';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './ImageCarousel.css'; \r\n\r\nconst NasaMediaCarousel = () => {\r\n  const [mediaData, setMediaData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('apollo 11'); // Default search query\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (searchQuery) {\r\n        const data = await fetchNasaMedia(searchQuery);\r\n        setMediaData(data);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [searchQuery]);\r\n\r\n  const handleSearchChange = (event) => {\r\n    const input = event.target.value;\r\n    // Check if the input is a string and sanitize it\r\n    if (typeof input === 'string') {\r\n      const sanitizedInput = input.trim(); // Trim whitespace\r\n      setSearchQuery(sanitizedInput);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"image-carousel-container\">\r\n        <h2>What pictures are you interested in from NASA? Search Now!</h2>\r\n        <input\r\n          className=\"image-search-input\"\r\n          type=\"text\"\r\n          value={searchQuery}\r\n          onChange={handleSearchChange}\r\n          placeholder=\"Enter search term\"\r\n        />\r\n        <Carousel>\r\n          {mediaData.length > 0 ? (\r\n            mediaData.map((media, index) => (\r\n              <Carousel.Item key={index}>\r\n                {media.links && <img className=\"full-page-image\" src={media.links[0].href} alt={media.data[0].title} />}\r\n                <Carousel.Caption>\r\n                  <h3>{media.data[0].title}</h3>\r\n                  <p>{media.data[0].description}</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n            ))\r\n          ) : (\r\n            <p className=\"no-data-message\">No data available. Try a different search term.</p>\r\n          )}\r\n        </Carousel>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NasaMediaCarousel;\r\n","import axios from 'axios';\r\n\r\nconst OPENWEATHER_API_KEY = '4486282242f23e0a063bc7ca6ccfa84e'; \r\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\r\n//https://api.openweathermap.org/data/2.5/weather?lat=44.34&lon=$10.99&appid=4486282242f23e0a063bc7ca6ccfa84e\r\n//\r\nexport const fetchWeatherData = async (lat=44.34,lon=10.99) => { \r\n  try {\r\n    const response = await axios.get(`${BASE_URL}?lat=${lat}&lon=${lon}&appid=${OPENWEATHER_API_KEY}`);\r\n    // console.log('This is fetched here',response)\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching weather data:\", error);\r\n    return null; \r\n  }\r\n};\r\n\r\n\r\n","export const cities = {\r\n    \"USA\": {\r\n      \"New York\": { lat: 40.7128, lon: -74.0060 },\r\n      \"Los Angeles\": { lat: 34.0522, lon: -118.2437 },\r\n      \"Chicago\": { lat: 41.8781, lon: -87.6298 },\r\n      \"Houston\": { lat: 29.7604, lon: -95.3698 },\r\n      \"Phoenix\": { lat: 33.4484, lon: -112.0740 },\r\n      \"Philadelphia\": { lat: 39.9526, lon: -75.1652 },\r\n      \"San Antonio\": { lat: 29.4241, lon: -98.4936 },\r\n      \"San Diego\": { lat: 32.7157, lon: -117.1611 },\r\n      \"Dallas\": { lat: 32.7767, lon: -96.7970 },\r\n      \"San Jose\": { lat: 37.3382, lon: -121.8863 },\r\n      \"Austin\": { lat: 30.2672, lon: -97.7431 },\r\n      \"Jacksonville\": { lat: 30.3322, lon: -81.6557 },\r\n      \"Fort Worth\": { lat: 32.7555, lon: -97.3308 },\r\n      \"Columbus\": { lat: 39.9612, lon: -82.9988 },\r\n      \"San Francisco\": { lat: 37.7749, lon: -122.4194 },\r\n      \"Charlotte\": { lat: 35.2271, lon: -80.8431 },\r\n      \"Indianapolis\": { lat: 39.7684, lon: -86.1581 },\r\n      \"Seattle\": { lat: 47.6062, lon: -122.3321 },\r\n      \"Denver\": { lat: 39.7392, lon: -104.9903 },\r\n      \"Washington D.C.\": { lat: 38.9072, lon: -77.0369 },\r\n      \"Boston\": { lat: 42.3601, lon: -71.0589 },\r\n      // ... more cities in the USA\r\n    },\r\n    \"UK\": {\r\n      \"London\": { lat: 51.5074, lon: -0.1278 },\r\n      \"Birmingham\": { lat: 52.4862, lon: -1.8904 },\r\n      \"Leeds\": { lat: 53.8008, lon: -1.5491 },\r\n      \"Glasgow\": { lat: 55.8642, lon: -4.2518 },\r\n      \"Sheffield\": { lat: 53.3811, lon: -1.4701 },\r\n      \"Bradford\": { lat: 53.7950, lon: -1.7594 },\r\n      \"Manchester\": { lat: 53.4808, lon: -2.2426 },\r\n      \"Edinburgh\": { lat: 55.9533, lon: -3.1883 },\r\n      \"Liverpool\": { lat: 53.4084, lon: -2.9916 },\r\n      \"Bristol\": { lat: 51.4545, lon: -2.5879 },\r\n      \"Cardiff\": { lat: 51.4816, lon: -3.1791 },\r\n      \"Belfast\": { lat: 54.5973, lon: -5.9301 },\r\n      \"Leicester\": { lat: 52.6369, lon: -1.1398 },\r\n      \"Wakefield\": { lat: 53.6833, lon: -1.4977 },\r\n      \"Coventry\": { lat: 52.4068, lon: -1.5197 },\r\n      \"Nottingham\": { lat: 52.9548, lon: -1.1581 },\r\n      \"Newcastle\": { lat: 54.9784, lon: -1.6174 },\r\n      \"Sunderland\": { lat: 54.9061, lon: -1.3811 },\r\n      \"Brighton\": { lat: 50.8225, lon: -0.1372 },\r\n      \"Kingston upon Hull\": { lat: 53.7676, lon: -0.3274 },\r\n      // ... more cities in the UK\r\n    },\r\n    \"France\": {\r\n      \"Paris\": { lat: 48.8566, lon: 2.3522 },\r\n      \"Marseille\": { lat: 43.2965, lon: 5.3698 },\r\n      \"Lyon\": { lat: 45.7640, lon: 4.8357 },\r\n      \"Toulouse\": { lat: 43.6047, lon: 1.4442 },\r\n      \"Nice\": { lat: 43.7102, lon: 7.2620 },\r\n      \"Nantes\": { lat: 47.2184, lon: -1.5536 },\r\n      \"Strasbourg\": { lat: 48.5734, lon: 7.7521 },\r\n      \"Montpellier\": { lat: 43.6108, lon: 3.8767 },\r\n      \"Bordeaux\": { lat: 44.8378, lon: -0.5792 },\r\n      \"Lille\": { lat: 50.6292, lon: 3.0573 },\r\n      \"Rennes\": { lat: 48.1173, lon: -1.6778 },\r\n      \"Reims\": { lat: 49.2583, lon: 4.0317 },\r\n      \"Le Havre\": { lat: 49.4944, lon: 0.1075 },\r\n      \"Cergy-Pontoise\": { lat: 49.0356, lon: 2.0600 },\r\n      \"Saint-Etienne\": { lat: 45.4397, lon: 4.3872 },\r\n      \"Toulon\": { lat: 43.1242, lon: 5.9280 },\r\n      \"Angers\": { lat: 47.4784, lon: -0.5632 },\r\n      \"Grenoble\": { lat: 45.1885, lon: 5.7245 },\r\n      \"Dijon\": { lat: 47.3220, lon: 5.0415 },\r\n      \"Nimes\": { lat: 43.8367, lon: 4.3601 },\r\n      // ... more cities in France\r\n    },\r\n    \"Japan\": {\r\n      \"Tokyo\": { lat: 35.6895, lon: 139.6917 },\r\n      \"Yokohama\": { lat: 35.4437, lon: 139.6380 },\r\n      \"Osaka\": { lat: 34.6937, lon: 135.5023 },\r\n      \"Nagoya\": { lat: 35.1815, lon: 136.9066 },\r\n      \"Sapporo\": { lat: 43.0621, lon: 141.3544 },\r\n      \"Fukuoka\": { lat: 33.5903, lon: 130.4017 },\r\n      \"Kobe\": { lat: 34.6901, lon: 135.1955 },\r\n      \"Kyoto\": { lat: 35.0116, lon: 135.7681 },\r\n      \"Kawasaki\": { lat: 35.5309, lon: 139.7030 },\r\n      \"Saitama\": { lat: 35.8617, lon: 139.6455 },\r\n      \"Hiroshima\": { lat: 34.3853, lon: 132.4553 },\r\n      \"Sendai\": { lat: 38.2688, lon: 140.8720 },\r\n      \"Chiba\": { lat: 35.6051, lon: 140.1233 },\r\n      \"Sakai\": { lat: 34.5733, lon: 135.4828 },\r\n      \"Shizuoka\": { lat: 34.9756, lon: 138.3827 },\r\n      \"Kumamoto\": { lat: 32.8031, lon: 130.7079 },\r\n      \"Okayama\": { lat: 34.6551, lon: 133.9195 },\r\n      \"Hamamatsu\": { lat: 34.7108, lon: 137.7263 },\r\n      \"Kagoshima\": { lat: 31.5602, lon: 130.5581 },\r\n      \"Funabashi\": { lat: 35.6940, lon: 139.9830 },\r\n      // ... more cities in Japan\r\n    },\r\n    \"Germany\": {\r\n      \"Berlin\": { lat: 52.5200, lon: 13.4050 },\r\n      \"Hamburg\": { lat: 53.5511, lon: 9.9937 },\r\n      \"Munich\": { lat: 48.1351, lon: 11.5820 },\r\n      \"Cologne\": { lat: 50.9375, lon: 6.9603 },\r\n      \"Frankfurt\": { lat: 50.1109, lon: 8.6821 },\r\n      \"Stuttgart\": { lat: 48.7758, lon: 9.1829 },\r\n      \"Dusseldorf\": { lat: 51.2277, lon: 6.7735 },\r\n      \"Dortmund\": { lat: 51.5136, lon: 7.4653 },\r\n      \"Essen\": { lat: 51.4566, lon: 7.0123 },\r\n      \"Leipzig\": { lat: 51.3397, lon: 12.3731 },\r\n      \"Bremen\": { lat: 53.0793, lon: 8.8017 },\r\n      \"Dresden\": { lat: 51.0504, lon: 13.7373 },\r\n      \"Hanover\": { lat: 52.3759, lon: 9.7320 },\r\n      \"Nuremberg\": { lat: 49.4521, lon: 11.0767 },\r\n      \"Duisburg\": { lat: 51.4344, lon: 6.7623 },\r\n      \"Bochum\": { lat: 51.4818, lon: 7.2197 },\r\n      \"Wuppertal\": { lat: 51.2562, lon: 7.1508 },\r\n      \"Bielefeld\": { lat: 52.0302, lon: 8.5325 },\r\n      \"Bonn\": { lat: 50.7374, lon: 7.0982 },\r\n      \"Mannheim\": { lat: 49.4875, lon: 8.4660 },\r\n      \"Karlsruhe\": { lat: 49.0069, lon: 8.4037 },\r\n      \"Wiesbaden\": { lat: 50.0826, lon: 8.2493 },\r\n      \"Munster\": { lat: 51.9607, lon: 7.6261 },\r\n      \"Gelsenkirchen\": { lat: 51.5177, lon: 7.0857 },\r\n      \"Augsburg\": { lat: 48.3705, lon: 10.8978 },\r\n      \"Monchengladbach\": { lat: 51.1805, lon: 6.4423 },\r\n      \"Braunschweig\": { lat: 52.2689, lon: 10.5267 },\r\n      // ... more cities in Germany\r\n    },\r\n    \"Mexico\": {\r\n        \"Mexico City\": { lat: 19.4326, lon: -99.1332 },\r\n        \"Guadalajara\": { lat: 20.6597, lon: -103.3496 },\r\n        \"Monterrey\": { lat: 25.6866, lon: -100.3161 },\r\n        \"Puebla\": { lat: 19.0414, lon: -98.2063 },\r\n        \"Toluca\": { lat: 19.2826, lon: -99.6557 },\r\n        // ... more cities in Mexico\r\n      },\r\n      \"Ethiopia\": {\r\n        \"Addis Ababa\": { lat: 9.0054, lon: 38.7636 },\r\n        \"Dire Dawa\": { lat: 9.5892, lon: 41.8661 },\r\n        \"Mek'ele\": { lat: 13.4967, lon: 39.4753 },\r\n        \"Gondar\": { lat: 12.6030, lon: 37.4521 },\r\n        \"Bahir Dar\": { lat: 11.5936, lon: 37.3908 },\r\n        // ... more cities in Ethiopia\r\n      },\r\n      \"Philippines\": {\r\n        \"Quezon City\": { lat: 14.6760, lon: 121.0437 },\r\n        \"Manila\": { lat: 13.4125, lon: 122.5563 },\r\n        \"Davao City\": { lat: 7.1907, lon: 125.4553 },\r\n        \"Caloocan\": { lat: 14.7566, lon: 121.0447 },\r\n        \"Cebu City\": { lat: 10.3157, lon: 123.8854 },\r\n        // ... more cities in Philippines\r\n      },\r\n      \"Egypt\": {\r\n        \"Cairo\": { lat: 30.0444, lon: 31.2357 },\r\n        \"Alexandria\": { lat: 31.2001, lon: 29.9187 },\r\n        \"Giza\": { lat: 30.0131, lon: 31.2089 },\r\n        \"Shubra El-Kheima\": { lat: 30.1286, lon: 31.2421 },\r\n        \"Port Said\": { lat: 31.2565, lon: 32.2841 },\r\n        // ... more cities in Egypt\r\n      },\r\n      \"Vietnam\": {\r\n        \"Hanoi\": { lat: 21.0285, lon: 105.8542 },\r\n        \"Ho Chi Minh City\": { lat: 10.7626, lon: 106.6602 },\r\n        \"Hai Phong\": { lat: 20.8444, lon: 106.6881 },\r\n        \"Can Tho\": { lat: 10.0452, lon: 105.7469 },\r\n        \"Da Nang\": { lat: 16.0544, lon: 108.2022 },\r\n        // ... more cities in Vietnam\r\n      },\r\n      \"DR Congo\": {\r\n        \"Kinshasa\": { lat: -4.4419, lon: 15.2663 },\r\n        \"Lubumbashi\": { lat: -11.6609, lon: 27.4794 },\r\n        \"Mbuji-Mayi\": { lat: -6.1360, lon: 23.5898 },\r\n        \"Kananga\": { lat: -5.8958, lon: 22.4176 },\r\n        \"Kisangani\": { lat: 0.5153, lon: 25.1903 },\r\n        // ... more cities in DR Congo\r\n      },\r\n      \"Turkey\": {\r\n        \"Istanbul\": { lat: 41.0082, lon: 28.9784 },\r\n        \"Ankara\": { lat: 39.9334, lon: 32.8597 },\r\n        \"Izmir\": { lat: 38.4192, lon: 27.1287 },\r\n        \"Bursa\": { lat: 40.1826, lon: 29.0674 },\r\n        \"Adana\": { lat: 37.0000, lon: 35.3213 },\r\n        // ... more cities in Turkey\r\n      },\r\n      \"Iran\": {\r\n        \"Tehran\": { lat: 35.6892, lon: 51.3890 },\r\n        \"Mashhad\": { lat: 36.2970, lon: 59.6062 },\r\n        \"Isfahan\": { lat: 32.6546, lon: 51.6680 },\r\n        \"Karaj\": { lat: 35.8205, lon: 50.9613 },\r\n        \"Tabriz\": { lat: 38.0808, lon: 46.2919 },\r\n        // ... more cities in Iran\r\n      },\r\n      \"Thailand\": {\r\n        \"Bangkok\": { lat: 13.7563, lon: 100.5018 },\r\n        \"Nonthaburi\": { lat: 13.8621, lon: 100.5144 },\r\n        \"Nakhon Ratchasima\": { lat: 14.9710, lon: 102.0875 },\r\n        \"Chiang Mai\": { lat: 18.7061, lon: 98.9817 },\r\n        \"Hat Yai\": { lat: 7.0086, lon: 100.4767 },\r\n        // ... more cities in Thailand\r\n      },\r\n      \"Brazil\": {\r\n        \"Sao Paulo\": { lat: -23.5505, lon: -46.6333 },\r\n        \"Rio de Janeiro\": { lat: -22.9068, lon: -43.1729 },\r\n        \"Salvador\": { lat: -12.9777, lon: -38.5016 },\r\n        \"Fortaleza\": { lat: -3.7319, lon: -38.5267 },\r\n        \"Belo Horizonte\": { lat: -19.9167, lon: -43.9345 },\r\n        // ... more cities in Brazil\r\n      }\r\n    // ... other countries and their cities\r\n  };\r\n  ","import React, { useState, useEffect } from 'react';\r\nimport { fetchWeatherData } from '../api/WeatherApi';\r\nimport './WeatherPage.css'; \r\n\r\n\r\nimport { cities } from '../utils/cities';\r\n\r\n\r\n\r\nconst WeatherPage = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [lat, setLat] = useState('');\r\n  const [lon, setLon] = useState('');\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [selectedCity, setSelectedCity] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n\r\n  //check if user input is valid\r\n  const isValidCoordinate = (value, type) => {\r\n    const num = parseFloat(value);\r\n    if (isNaN(num)) return false;\r\n\r\n    if (type === 'latitude') return num >= -90 && num <= 90;\r\n    if (type === 'longitude') return num >= -180 && num <= 180;\r\n\r\n    return false;\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setError('');\r\n\r\n    if (!isValidCoordinate(lat, 'latitude') || !isValidCoordinate(lon, 'longitude')) {\r\n      setError('Please enter valid latitude and longitude values.');\r\n      setLat('');\r\n      setLon('');\r\n      return;\r\n    }\r\n\r\n    const data = await fetchWeatherData(lat, lon);\r\n    setWeatherData(data);\r\n      console.log('error is ',error)\r\n      setLat('');\r\n      setLon('');\r\n  };\r\n  const handleCountryChange = (event) => {\r\n    setSelectedCountry(event.target.value);\r\n    setSelectedCity(''); // Reset city selection\r\n  };\r\n  const handleCityChange = (event) => {\r\n    setSelectedCity(event.target.value);\r\n    const cityCoords = cities[selectedCountry][event.target.value];\r\n    if (cityCoords) {\r\n      fetchWeatherData(cityCoords.lat, cityCoords.lon).then(setWeatherData);\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const data = await fetchWeatherData();\r\n      setWeatherData(data);\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  const kelvinToCelsius = (kelvin) => {\r\n    return (kelvin - 273.15).toFixed(2);\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <h1 className=\"header-title\">Hey there! Pop in your location and let's see if it's a good night for stargazing.</h1>\r\n    <div className=\"weather-container\">\r\n      \r\n        <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"Latitude\" \r\n            value={lat} \r\n            onChange={(e) => setLat(e.target.value)} \r\n          />\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"Longitude\" \r\n            value={lon} \r\n            onChange={(e) => setLon(e.target.value)} \r\n          />\r\n          <button type=\"submit\">Get Weather</button>\r\n        </div>\r\n      </form>\r\n      {error && <p className=\"weather-header\">{error}</p> }\r\n\r\n      {/* Country Selector */}\r\n      <div className=\"country-selector\">\r\n        <select onChange={handleCountryChange} defaultValue=\"\">\r\n          <option value=\"\" disabled>Select a Country</option>\r\n          {Object.keys(cities).map((country) => (\r\n            <option key={country} value={country}>{country}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* City Selector */}\r\n      <div className=\"city-selector\">\r\n        <select onChange={handleCityChange} value={selectedCity} disabled={!selectedCountry}>\r\n          <option value=\"\">Select a City</option>\r\n          {selectedCountry && Object.keys(cities[selectedCountry]).map((city) => (\r\n            <option key={city} value={city}>{city}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {weatherData ? (\r\n        <div>\r\n          <h2 className=\"weather-header\">Weather in {weatherData.name}, {weatherData.sys.country}</h2>\r\n          <p className=\"weather-info\">Current Temperature: <span>{kelvinToCelsius(weatherData.main.temp)}°C</span></p>\r\n          <p className=\"weather-info\">Feels Like: <span>{kelvinToCelsius(weatherData.main.feels_like)}°C</span></p>\r\n          <p className=\"weather-info\">Conditions: <span>{weatherData.weather[0].main} ({weatherData.weather[0].description})</span></p>\r\n          <p className=\"weather-info\">Humidity: <span>{weatherData.main.humidity}%</span></p>\r\n          <p className=\"weather-info\">Wind Speed: <span>{weatherData.wind.speed} m/s</span></p>\r\n          <p className=\"weather-info\">Visibility: <span>{weatherData.visibility / 1000} km</span></p>\r\n          <p className=\"weather-info\">Pressure: <span>{weatherData.main.pressure} hPa</span></p>\r\n          <p className=\"weather-info\">Cloudiness: <span>{weatherData.clouds.all}%</span></p>\r\n          <p className=\"weather-info\">Sunrise: <span>{new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString()}</span></p>\r\n          <p className=\"weather-info\">Sunset: <span>{new Date(weatherData.sys.sunset * 1000).toLocaleTimeString()}</span></p>\r\n        </div>\r\n      ) : (\r\n        <p>Loading weather data...</p>\r\n      )}\r\n    </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchNasaData } from '../api/NasaApi';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './NasaPage.css'; \r\n\r\nconst NasaPage = () => {\r\n  const [nasaData, setNasaData] = useState(null);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getNasaData = async () => {\r\n      const data = await fetchNasaData();\r\n      setNasaData(data);\r\n\r\n    };\r\n\r\n    getNasaData();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"nasa-page-container\">\r\n      {nasaData ? (\r\n        \r\n        <div>\r\n          <h1 className=\"nasa-page-header\">Today's Astronomy Picture</h1>\r\n          <h2>{nasaData.title}</h2>\r\n          <img src={nasaData.url} alt={nasaData.title} className=\"nasa-image\" />\r\n          <p className=\"nasa-text\">{nasaData.explanation}</p>\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n\r\n\r\n\r\n    </div>\r\n\r\n    \r\n  );\r\n};\r\n\r\nexport default NasaPage;\r\n","import Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nfunction NavbarComponent() {\r\n  return (\r\n    <Navbar expand=\"lg\" className=\"bg-body-tertiary\">\r\n      <Container>\r\n        <Navbar.Brand as={Link} to=\"/\">Star Gazer</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link as={Link} to=\"/\">Weather</Nav.Link>\r\n            <Nav.Link as={Link} to=\"/nasa\">NASA Today's Astronomy Picture</Nav.Link>\r\n            <Nav.Link as={Link} to=\"/nasaData\">NASA Coronal Mass Ejection (CME) Analysis</Nav.Link>\r\n            <Nav.Link as={Link} to=\"/media\">NASA Picture Search</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavbarComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { fetchCMEAnalysis } from '../api/NasaApi';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './CMEAnalysis.css'; \r\n\r\nconst CMEAnalysis = () => {\r\n  const [cmeAnalysisData, setCmeAnalysisData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCMEData = async () => {\r\n      const data = await fetchCMEAnalysis();\r\n      setCmeAnalysisData(data);\r\n    };\r\n\r\n    getCMEData();\r\n  }, []);\r\n\r\n  const cardVariants = ['Primary', 'Secondary', 'Success', 'Danger', 'Warning', 'Info', 'Light', 'Dark'];\r\n  const borderVariants = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'dark', 'light'];\r\n\r\n  return (\r\n    <div className=\"cme-analysis-container\">\r\n      <h1 className=\"cme-header\">NASA Coronal Mass Ejection (CME) Analysis</h1>\r\n      <div className=\"cme-introduction\">\r\n        <p>\r\n        The sun is constantly emitting streams of charged particles, known as the solar wind, that interact with the Earth's magnetic field and atmosphere. Sometimes, the sun also releases huge bursts of plasma and magnetic field, called coronal mass ejections (CMEs), that can travel across the solar system and affect planets and spacecraft along their way. In this page, you will learn more about what CMEs are, how they form, how they impact human life and technology, and how NASA monitors and analyzes them using data from various sources.\r\n        </p>\r\n        <p>\r\n          CMEs impact Earth and other planets in our solar system, leading to geomagnetic storms that can disrupt satellite operations, telecommunications, navigation systems, and even power grids.\r\n          Here is CME Analysis of recent 30 days from NASA.\r\n        </p>\r\n      </div>\r\n      <Row xs={1} md={5} className=\"g-4 card-row\">\r\n        {cmeAnalysisData.length > 0 ? (\r\n          cmeAnalysisData.map((cme, index) => (\r\n            <Col key={index}>\r\n              <Card\r\n                bg={cardVariants[index % cardVariants.length].toLowerCase()}\r\n                border={borderVariants[index % borderVariants.length]}\r\n                text={cardVariants[index % cardVariants.length].toLowerCase() === 'light' ? 'dark' : 'white'}\r\n                style={{ width: '18rem', marginBottom: '1rem' }}\r\n              >\r\n                <Card.Body>\r\n                  <Card.Title>CME Analysis Data</Card.Title>\r\n                  <Card.Text>\r\n                    <p>Time: {cme.time21_5}</p>\r\n                    <p>Latitude: {cme.latitude}</p>\r\n                    <p>Longitude: {cme.longitude}</p>\r\n                    <p>Half Angle: {cme.halfAngle}</p>\r\n                    <p>Speed: {cme.speed}</p>\r\n                    <p>Type: {cme.type}</p>\r\n                    <p>Most Accurate: {cme.isMostAccurate ? 'Yes' : 'No'}</p>\r\n                    <p>Associated CME ID: {cme.associatedCMEID}</p>\r\n                    <p>Note: {cme.note}</p>\r\n                    <p>Catalog: {cme.catalog}</p>\r\n                    <a href={cme.link} target=\"_blank\" rel=\"noopener noreferrer\">View More</a>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        ) : (\r\n          <p>No CME Analysis Data Available</p>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CMEAnalysis;\r\n","// import logo from './logo.svg';\n//$env:NODE_OPTIONS = \"--openssl-legacy-provider\"\nimport NasaMediaCarousel from './components/NasaMediaCarousel';\nimport './App.css';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport React from 'react';\nimport WeatherPage from './components/WeatherPage';\nimport NasaPage from './components/NasaPage';\nimport NavbarComponent from './components/NavbarComponent';\nimport CMEAnalysis from './components/CMEAnalysis';\nfunction App() {\n  return (\n\n    <Router>\n    <NavbarComponent />\n    <Routes>\n        <Route path=\"/\" element={<WeatherPage />} />\n        <Route path=\"/nasa\" element={<NasaPage />} />\n        <Route path=\"/nasaData\" element={<CMEAnalysis />} />\n        \n        <Route path=\"/media\" element={<NasaMediaCarousel />} />\n      </Routes>\n  </Router>\n\n  // <>\n  // <h1>Hey there! Pop in your location and let's see if it's a good night for stargazing.</h1>\n\n  //   <WeatherPage/>\n  // <h1> Astronomy Picture of the Day</h1>\n  //   <NasaPage/>\n  //   <div>\n  //     <h1>NASA Media</h1>\n  //     <NasaMediaCarousel />\n  //   </div>\n  //   </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
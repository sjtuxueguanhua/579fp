{"version":3,"sources":["api/NasaApi.js","components/NasaMediaCarousel.js","api/WeatherApi.js","utils/cities.js","components/WeatherPage.js","components/NasaPage.js","components/NavbarComponent.js","components/CMEAnalysis.js","App.js","reportWebVitals.js","index.js"],"names":["NASA_API_KEY","formatDate","date","toISOString","split","fetchCMEAnalysis","async","startDate","get30DaysAgoDate","Date","setDate","getDate","endDate","axios","get","concat","data","NasaMediaCarousel","mediaData","setMediaData","useState","searchQuery","setSearchQuery","useEffect","params","q","media_type","collection","items","error","console","fetchNasaMedia","then","React","createElement","Fragment","className","type","value","onChange","event","target","placeholder","Carousel","map","media","index","Item","key","links","src","href","alt","title","Caption","description","fetchWeatherData","lat","arguments","length","undefined","lon","cities","USA","New York","Los Angeles","Chicago","Houston","Phoenix","Philadelphia","San Antonio","San Diego","Dallas","San Jose","Austin","Jacksonville","Fort Worth","Columbus","San Francisco","Charlotte","Indianapolis","Seattle","Denver","Washington D.C.","Boston","UK","London","Birmingham","Leeds","Glasgow","Sheffield","Bradford","Manchester","Edinburgh","Liverpool","Bristol","Cardiff","Belfast","Leicester","Wakefield","Coventry","Nottingham","Newcastle","Sunderland","Brighton","Kingston upon Hull","France","Paris","Marseille","Lyon","Toulouse","Nice","Nantes","Strasbourg","Montpellier","Bordeaux","Lille","Rennes","Reims","Le Havre","Cergy-Pontoise","Saint-Etienne","Toulon","Angers","Grenoble","Dijon","Nimes","Japan","Tokyo","Yokohama","Osaka","Nagoya","Sapporo","Fukuoka","Kobe","Kyoto","Kawasaki","Saitama","Hiroshima","Sendai","Chiba","Sakai","Shizuoka","Kumamoto","Okayama","Hamamatsu","Kagoshima","Funabashi","Germany","Berlin","Hamburg","Munich","Cologne","Frankfurt","Stuttgart","Dusseldorf","Dortmund","Essen","Leipzig","Bremen","Dresden","Hanover","Nuremberg","Duisburg","Bochum","Wuppertal","Bielefeld","Bonn","Mannheim","Karlsruhe","Wiesbaden","Munster","Gelsenkirchen","Augsburg","Monchengladbach","Braunschweig","Mexico","Mexico City","Guadalajara","Monterrey","Puebla","Toluca","Ethiopia","Addis Ababa","Dire Dawa","Mek'ele","Gondar","Bahir Dar","Philippines","Quezon City","Manila","Davao City","Caloocan","Cebu City","Egypt","Cairo","Alexandria","Giza","Shubra El-Kheima","Port Said","Vietnam","Hanoi","Ho Chi Minh City","Hai Phong","Can Tho","Da Nang","DR Congo","Kinshasa","Lubumbashi","Mbuji-Mayi","Kananga","Kisangani","Turkey","Istanbul","Ankara","Izmir","Bursa","Adana","Iran","Tehran","Mashhad","Isfahan","Karaj","Tabriz","Thailand","Bangkok","Nonthaburi","Nakhon Ratchasima","Chiang Mai","Hat Yai","Brazil","Sao Paulo","Rio de Janeiro","Salvador","Fortaleza","Belo Horizonte","WeatherPage","weatherData","setWeatherData","setLat","setLon","selectedCountry","setSelectedCountry","selectedCity","setSelectedCity","loadData","kelvinToCelsius","kelvin","toFixed","onSubmit","preventDefault","e","defaultValue","disabled","Object","keys","country","cityCoords","city","name","sys","main","temp","feels_like","weather","humidity","wind","speed","visibility","pressure","clouds","all","sunrise","toLocaleTimeString","sunset","NasaPage","nasaData","setNasaData","fetchNasaData","getNasaData","url","explanation","NavbarComponent","Navbar","expand","Container","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","CMEAnalysis","cmeAnalysisData","setCmeAnalysisData","getCMEData","cardVariants","borderVariants","Row","xs","md","cme","Col","Card","bg","toLowerCase","border","text","style","width","marginBottom","Body","Title","Text","time21_5","latitude","longitude","halfAngle","isMostAccurate","associatedCMEID","note","catalog","link","rel","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e0823089.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst NASA_API_KEY = 'ot4mbzwtIPW9eN4oTMPtbxIhIWtU6v2RZNBAC319'; \r\nconst NASA_API_URL = 'https://api.nasa.gov/';\r\n\r\nconst DONKI_API_URL = 'https://api.nasa.gov/DONKI/';\r\n\r\n//APOD API\r\nexport const fetchNasaData = async () => {\r\n  try {\r\n    const response = await axios.get(`${NASA_API_URL}planetary/apod?api_key=${NASA_API_KEY}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching NASA data:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\nconst formatDate = (date) => date.toISOString().split('T')[0];\r\n\r\nconst get30DaysAgoDate = () => {\r\n  const date = new Date();\r\n  date.setDate(date.getDate() - 30);\r\n  return formatDate(date);\r\n};\r\n\r\nexport const fetchCMEAnalysis = async () => {\r\n  const startDate = get30DaysAgoDate();\r\n  const endDate = formatDate(new Date());\r\n  const response = await axios.get(`${DONKI_API_URL}CMEAnalysis?startDate=${startDate}&endDate=${endDate}&mostAccurateOnly=true&speed=500&halfAngle=30&catalog=ALL&api_key=${NASA_API_KEY}`);\r\n  return response.data;\r\n};\r\n\r\n\r\n\r\nconst NASA_IMAGES_API_URL = 'https://images-api.nasa.gov';\r\n\r\nexport const fetchNasaMedia = async (searchQuery) => {\r\n  try {\r\n    const response = await axios.get(`${NASA_IMAGES_API_URL}/search`, {\r\n      params: {\r\n        q: searchQuery,\r\n        media_type: 'image,video'\r\n      }\r\n    });\r\n    return response.data.collection.items;\r\n  } catch (error) {\r\n    console.error(\"Error fetching NASA media:\", error);\r\n    return [];\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport { fetchNasaMedia } from '../api/NasaApi';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './ImageCarousel.css'; \r\n\r\nconst NasaMediaCarousel = () => {\r\n  const [mediaData, setMediaData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('apollo 11'); // Default search query\r\n\r\n  useEffect(() => {\r\n    if (searchQuery) {\r\n      fetchNasaMedia(searchQuery).then(data => setMediaData(data));\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"image-carousel-container\">\r\n        <h2>What are you interested in NASA? Search Now!</h2>\r\n        <input\r\n          className=\"image-search-input\"\r\n          type=\"text\"\r\n          value={searchQuery}\r\n          onChange={handleSearchChange}\r\n          placeholder=\"Enter search term\"\r\n        />\r\n        <Carousel>\r\n          {mediaData.map((media, index) => (\r\n            <Carousel.Item key={index}>\r\n              {media.links && <img className=\"full-page-image\" src={media.links[0].href} alt={media.data[0].title} />}\r\n              <Carousel.Caption>\r\n                <h3>{media.data[0].title}</h3>\r\n                <p>{media.data[0].description}</p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NasaMediaCarousel;\r\n","import axios from 'axios';\r\n\r\nconst OPENWEATHER_API_KEY = '4486282242f23e0a063bc7ca6ccfa84e'; \r\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\r\n//https://api.openweathermap.org/data/2.5/weather?lat=44.34&lon=$10.99&appid=4486282242f23e0a063bc7ca6ccfa84e\r\n//\r\nexport const fetchWeatherData = async (lat=44.34,lon=10.99) => { \r\n  try {\r\n    const response = await axios.get(`${BASE_URL}?lat=${lat}&lon=${lon}&appid=${OPENWEATHER_API_KEY}`);\r\n    // console.log('This is fetched here',response)\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching weather data:\", error);\r\n    return null; \r\n  }\r\n};\r\n\r\n\r\n","export const cities = {\r\n    \"USA\": {\r\n      \"New York\": { lat: 40.7128, lon: -74.0060 },\r\n      \"Los Angeles\": { lat: 34.0522, lon: -118.2437 },\r\n      \"Chicago\": { lat: 41.8781, lon: -87.6298 },\r\n      \"Houston\": { lat: 29.7604, lon: -95.3698 },\r\n      \"Phoenix\": { lat: 33.4484, lon: -112.0740 },\r\n      \"Philadelphia\": { lat: 39.9526, lon: -75.1652 },\r\n      \"San Antonio\": { lat: 29.4241, lon: -98.4936 },\r\n      \"San Diego\": { lat: 32.7157, lon: -117.1611 },\r\n      \"Dallas\": { lat: 32.7767, lon: -96.7970 },\r\n      \"San Jose\": { lat: 37.3382, lon: -121.8863 },\r\n      \"Austin\": { lat: 30.2672, lon: -97.7431 },\r\n      \"Jacksonville\": { lat: 30.3322, lon: -81.6557 },\r\n      \"Fort Worth\": { lat: 32.7555, lon: -97.3308 },\r\n      \"Columbus\": { lat: 39.9612, lon: -82.9988 },\r\n      \"San Francisco\": { lat: 37.7749, lon: -122.4194 },\r\n      \"Charlotte\": { lat: 35.2271, lon: -80.8431 },\r\n      \"Indianapolis\": { lat: 39.7684, lon: -86.1581 },\r\n      \"Seattle\": { lat: 47.6062, lon: -122.3321 },\r\n      \"Denver\": { lat: 39.7392, lon: -104.9903 },\r\n      \"Washington D.C.\": { lat: 38.9072, lon: -77.0369 },\r\n      \"Boston\": { lat: 42.3601, lon: -71.0589 },\r\n      // ... more cities in the USA\r\n    },\r\n    \"UK\": {\r\n      \"London\": { lat: 51.5074, lon: -0.1278 },\r\n      \"Birmingham\": { lat: 52.4862, lon: -1.8904 },\r\n      \"Leeds\": { lat: 53.8008, lon: -1.5491 },\r\n      \"Glasgow\": { lat: 55.8642, lon: -4.2518 },\r\n      \"Sheffield\": { lat: 53.3811, lon: -1.4701 },\r\n      \"Bradford\": { lat: 53.7950, lon: -1.7594 },\r\n      \"Manchester\": { lat: 53.4808, lon: -2.2426 },\r\n      \"Edinburgh\": { lat: 55.9533, lon: -3.1883 },\r\n      \"Liverpool\": { lat: 53.4084, lon: -2.9916 },\r\n      \"Bristol\": { lat: 51.4545, lon: -2.5879 },\r\n      \"Cardiff\": { lat: 51.4816, lon: -3.1791 },\r\n      \"Belfast\": { lat: 54.5973, lon: -5.9301 },\r\n      \"Leicester\": { lat: 52.6369, lon: -1.1398 },\r\n      \"Wakefield\": { lat: 53.6833, lon: -1.4977 },\r\n      \"Coventry\": { lat: 52.4068, lon: -1.5197 },\r\n      \"Nottingham\": { lat: 52.9548, lon: -1.1581 },\r\n      \"Newcastle\": { lat: 54.9784, lon: -1.6174 },\r\n      \"Sunderland\": { lat: 54.9061, lon: -1.3811 },\r\n      \"Brighton\": { lat: 50.8225, lon: -0.1372 },\r\n      \"Kingston upon Hull\": { lat: 53.7676, lon: -0.3274 },\r\n      // ... more cities in the UK\r\n    },\r\n    \"France\": {\r\n      \"Paris\": { lat: 48.8566, lon: 2.3522 },\r\n      \"Marseille\": { lat: 43.2965, lon: 5.3698 },\r\n      \"Lyon\": { lat: 45.7640, lon: 4.8357 },\r\n      \"Toulouse\": { lat: 43.6047, lon: 1.4442 },\r\n      \"Nice\": { lat: 43.7102, lon: 7.2620 },\r\n      \"Nantes\": { lat: 47.2184, lon: -1.5536 },\r\n      \"Strasbourg\": { lat: 48.5734, lon: 7.7521 },\r\n      \"Montpellier\": { lat: 43.6108, lon: 3.8767 },\r\n      \"Bordeaux\": { lat: 44.8378, lon: -0.5792 },\r\n      \"Lille\": { lat: 50.6292, lon: 3.0573 },\r\n      \"Rennes\": { lat: 48.1173, lon: -1.6778 },\r\n      \"Reims\": { lat: 49.2583, lon: 4.0317 },\r\n      \"Le Havre\": { lat: 49.4944, lon: 0.1075 },\r\n      \"Cergy-Pontoise\": { lat: 49.0356, lon: 2.0600 },\r\n      \"Saint-Etienne\": { lat: 45.4397, lon: 4.3872 },\r\n      \"Toulon\": { lat: 43.1242, lon: 5.9280 },\r\n      \"Angers\": { lat: 47.4784, lon: -0.5632 },\r\n      \"Grenoble\": { lat: 45.1885, lon: 5.7245 },\r\n      \"Dijon\": { lat: 47.3220, lon: 5.0415 },\r\n      \"Nimes\": { lat: 43.8367, lon: 4.3601 },\r\n      // ... more cities in France\r\n    },\r\n    \"Japan\": {\r\n      \"Tokyo\": { lat: 35.6895, lon: 139.6917 },\r\n      \"Yokohama\": { lat: 35.4437, lon: 139.6380 },\r\n      \"Osaka\": { lat: 34.6937, lon: 135.5023 },\r\n      \"Nagoya\": { lat: 35.1815, lon: 136.9066 },\r\n      \"Sapporo\": { lat: 43.0621, lon: 141.3544 },\r\n      \"Fukuoka\": { lat: 33.5903, lon: 130.4017 },\r\n      \"Kobe\": { lat: 34.6901, lon: 135.1955 },\r\n      \"Kyoto\": { lat: 35.0116, lon: 135.7681 },\r\n      \"Kawasaki\": { lat: 35.5309, lon: 139.7030 },\r\n      \"Saitama\": { lat: 35.8617, lon: 139.6455 },\r\n      \"Hiroshima\": { lat: 34.3853, lon: 132.4553 },\r\n      \"Sendai\": { lat: 38.2688, lon: 140.8720 },\r\n      \"Chiba\": { lat: 35.6051, lon: 140.1233 },\r\n      \"Sakai\": { lat: 34.5733, lon: 135.4828 },\r\n      \"Shizuoka\": { lat: 34.9756, lon: 138.3827 },\r\n      \"Kumamoto\": { lat: 32.8031, lon: 130.7079 },\r\n      \"Okayama\": { lat: 34.6551, lon: 133.9195 },\r\n      \"Hamamatsu\": { lat: 34.7108, lon: 137.7263 },\r\n      \"Kagoshima\": { lat: 31.5602, lon: 130.5581 },\r\n      \"Funabashi\": { lat: 35.6940, lon: 139.9830 },\r\n      // ... more cities in Japan\r\n    },\r\n    \"Germany\": {\r\n      \"Berlin\": { lat: 52.5200, lon: 13.4050 },\r\n      \"Hamburg\": { lat: 53.5511, lon: 9.9937 },\r\n      \"Munich\": { lat: 48.1351, lon: 11.5820 },\r\n      \"Cologne\": { lat: 50.9375, lon: 6.9603 },\r\n      \"Frankfurt\": { lat: 50.1109, lon: 8.6821 },\r\n      \"Stuttgart\": { lat: 48.7758, lon: 9.1829 },\r\n      \"Dusseldorf\": { lat: 51.2277, lon: 6.7735 },\r\n      \"Dortmund\": { lat: 51.5136, lon: 7.4653 },\r\n      \"Essen\": { lat: 51.4566, lon: 7.0123 },\r\n      \"Leipzig\": { lat: 51.3397, lon: 12.3731 },\r\n      \"Bremen\": { lat: 53.0793, lon: 8.8017 },\r\n      \"Dresden\": { lat: 51.0504, lon: 13.7373 },\r\n      \"Hanover\": { lat: 52.3759, lon: 9.7320 },\r\n      \"Nuremberg\": { lat: 49.4521, lon: 11.0767 },\r\n      \"Duisburg\": { lat: 51.4344, lon: 6.7623 },\r\n      \"Bochum\": { lat: 51.4818, lon: 7.2197 },\r\n      \"Wuppertal\": { lat: 51.2562, lon: 7.1508 },\r\n      \"Bielefeld\": { lat: 52.0302, lon: 8.5325 },\r\n      \"Bonn\": { lat: 50.7374, lon: 7.0982 },\r\n      \"Mannheim\": { lat: 49.4875, lon: 8.4660 },\r\n      \"Karlsruhe\": { lat: 49.0069, lon: 8.4037 },\r\n      \"Wiesbaden\": { lat: 50.0826, lon: 8.2493 },\r\n      \"Munster\": { lat: 51.9607, lon: 7.6261 },\r\n      \"Gelsenkirchen\": { lat: 51.5177, lon: 7.0857 },\r\n      \"Augsburg\": { lat: 48.3705, lon: 10.8978 },\r\n      \"Monchengladbach\": { lat: 51.1805, lon: 6.4423 },\r\n      \"Braunschweig\": { lat: 52.2689, lon: 10.5267 },\r\n      // ... more cities in Germany\r\n    },\r\n    \"Mexico\": {\r\n        \"Mexico City\": { lat: 19.4326, lon: -99.1332 },\r\n        \"Guadalajara\": { lat: 20.6597, lon: -103.3496 },\r\n        \"Monterrey\": { lat: 25.6866, lon: -100.3161 },\r\n        \"Puebla\": { lat: 19.0414, lon: -98.2063 },\r\n        \"Toluca\": { lat: 19.2826, lon: -99.6557 },\r\n        // ... more cities in Mexico\r\n      },\r\n      \"Ethiopia\": {\r\n        \"Addis Ababa\": { lat: 9.0054, lon: 38.7636 },\r\n        \"Dire Dawa\": { lat: 9.5892, lon: 41.8661 },\r\n        \"Mek'ele\": { lat: 13.4967, lon: 39.4753 },\r\n        \"Gondar\": { lat: 12.6030, lon: 37.4521 },\r\n        \"Bahir Dar\": { lat: 11.5936, lon: 37.3908 },\r\n        // ... more cities in Ethiopia\r\n      },\r\n      \"Philippines\": {\r\n        \"Quezon City\": { lat: 14.6760, lon: 121.0437 },\r\n        \"Manila\": { lat: 13.4125, lon: 122.5563 },\r\n        \"Davao City\": { lat: 7.1907, lon: 125.4553 },\r\n        \"Caloocan\": { lat: 14.7566, lon: 121.0447 },\r\n        \"Cebu City\": { lat: 10.3157, lon: 123.8854 },\r\n        // ... more cities in Philippines\r\n      },\r\n      \"Egypt\": {\r\n        \"Cairo\": { lat: 30.0444, lon: 31.2357 },\r\n        \"Alexandria\": { lat: 31.2001, lon: 29.9187 },\r\n        \"Giza\": { lat: 30.0131, lon: 31.2089 },\r\n        \"Shubra El-Kheima\": { lat: 30.1286, lon: 31.2421 },\r\n        \"Port Said\": { lat: 31.2565, lon: 32.2841 },\r\n        // ... more cities in Egypt\r\n      },\r\n      \"Vietnam\": {\r\n        \"Hanoi\": { lat: 21.0285, lon: 105.8542 },\r\n        \"Ho Chi Minh City\": { lat: 10.7626, lon: 106.6602 },\r\n        \"Hai Phong\": { lat: 20.8444, lon: 106.6881 },\r\n        \"Can Tho\": { lat: 10.0452, lon: 105.7469 },\r\n        \"Da Nang\": { lat: 16.0544, lon: 108.2022 },\r\n        // ... more cities in Vietnam\r\n      },\r\n      \"DR Congo\": {\r\n        \"Kinshasa\": { lat: -4.4419, lon: 15.2663 },\r\n        \"Lubumbashi\": { lat: -11.6609, lon: 27.4794 },\r\n        \"Mbuji-Mayi\": { lat: -6.1360, lon: 23.5898 },\r\n        \"Kananga\": { lat: -5.8958, lon: 22.4176 },\r\n        \"Kisangani\": { lat: 0.5153, lon: 25.1903 },\r\n        // ... more cities in DR Congo\r\n      },\r\n      \"Turkey\": {\r\n        \"Istanbul\": { lat: 41.0082, lon: 28.9784 },\r\n        \"Ankara\": { lat: 39.9334, lon: 32.8597 },\r\n        \"Izmir\": { lat: 38.4192, lon: 27.1287 },\r\n        \"Bursa\": { lat: 40.1826, lon: 29.0674 },\r\n        \"Adana\": { lat: 37.0000, lon: 35.3213 },\r\n        // ... more cities in Turkey\r\n      },\r\n      \"Iran\": {\r\n        \"Tehran\": { lat: 35.6892, lon: 51.3890 },\r\n        \"Mashhad\": { lat: 36.2970, lon: 59.6062 },\r\n        \"Isfahan\": { lat: 32.6546, lon: 51.6680 },\r\n        \"Karaj\": { lat: 35.8205, lon: 50.9613 },\r\n        \"Tabriz\": { lat: 38.0808, lon: 46.2919 },\r\n        // ... more cities in Iran\r\n      },\r\n      \"Thailand\": {\r\n        \"Bangkok\": { lat: 13.7563, lon: 100.5018 },\r\n        \"Nonthaburi\": { lat: 13.8621, lon: 100.5144 },\r\n        \"Nakhon Ratchasima\": { lat: 14.9710, lon: 102.0875 },\r\n        \"Chiang Mai\": { lat: 18.7061, lon: 98.9817 },\r\n        \"Hat Yai\": { lat: 7.0086, lon: 100.4767 },\r\n        // ... more cities in Thailand\r\n      },\r\n      \"Brazil\": {\r\n        \"Sao Paulo\": { lat: -23.5505, lon: -46.6333 },\r\n        \"Rio de Janeiro\": { lat: -22.9068, lon: -43.1729 },\r\n        \"Salvador\": { lat: -12.9777, lon: -38.5016 },\r\n        \"Fortaleza\": { lat: -3.7319, lon: -38.5267 },\r\n        \"Belo Horizonte\": { lat: -19.9167, lon: -43.9345 },\r\n        // ... more cities in Brazil\r\n      }\r\n    // ... other countries and their cities\r\n  };\r\n  ","import React, { useState, useEffect } from 'react';\r\nimport { fetchWeatherData } from '../api/WeatherApi';\r\nimport './WeatherPage.css'; \r\n\r\n\r\nimport { cities } from '../utils/cities';\r\n\r\n\r\n\r\nconst WeatherPage = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [lat, setLat] = useState('');\r\n  const [lon, setLon] = useState('');\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [selectedCity, setSelectedCity] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const data = await fetchWeatherData(lat, lon);\r\n    setWeatherData(data);\r\n  };\r\n  const handleCountryChange = (event) => {\r\n    setSelectedCountry(event.target.value);\r\n    setSelectedCity(''); // Reset city selection\r\n  };\r\n  const handleCityChange = (event) => {\r\n    setSelectedCity(event.target.value);\r\n    const cityCoords = cities[selectedCountry][event.target.value];\r\n    if (cityCoords) {\r\n      fetchWeatherData(cityCoords.lat, cityCoords.lon).then(setWeatherData);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const data = await fetchWeatherData();\r\n      setWeatherData(data);\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  const kelvinToCelsius = (kelvin) => {\r\n    return (kelvin - 273.15).toFixed(2);\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <h1 className=\"header-title\">Hey there! Pop in your location and let's see if it's a good night for stargazing.</h1>\r\n    <div className=\"weather-container\">\r\n      \r\n        <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"Latitude\" \r\n            value={lat} \r\n            onChange={(e) => setLat(e.target.value)} \r\n          />\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"Longitude\" \r\n            value={lon} \r\n            onChange={(e) => setLon(e.target.value)} \r\n          />\r\n          <button type=\"submit\">Get Weather</button>\r\n        </div>\r\n      </form>\r\n\r\n      {/* Country Selector */}\r\n      <div className=\"country-selector\">\r\n        <select onChange={handleCountryChange} defaultValue=\"\">\r\n          <option value=\"\" disabled>Select a Country</option>\r\n          {Object.keys(cities).map((country) => (\r\n            <option key={country} value={country}>{country}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* City Selector */}\r\n      <div className=\"city-selector\">\r\n        <select onChange={handleCityChange} value={selectedCity} disabled={!selectedCountry}>\r\n          <option value=\"\">Select a City</option>\r\n          {selectedCountry && Object.keys(cities[selectedCountry]).map((city) => (\r\n            <option key={city} value={city}>{city}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {weatherData ? (\r\n        <div>\r\n          <h2 className=\"weather-header\">Weather in {weatherData.name}, {weatherData.sys.country}</h2>\r\n          <p className=\"weather-info\">Current Temperature: <span>{kelvinToCelsius(weatherData.main.temp)}°C</span></p>\r\n          <p className=\"weather-info\">Feels Like: <span>{kelvinToCelsius(weatherData.main.feels_like)}°C</span></p>\r\n          <p className=\"weather-info\">Conditions: <span>{weatherData.weather[0].main} ({weatherData.weather[0].description})</span></p>\r\n          <p className=\"weather-info\">Humidity: <span>{weatherData.main.humidity}%</span></p>\r\n          <p className=\"weather-info\">Wind Speed: <span>{weatherData.wind.speed} m/s</span></p>\r\n          <p className=\"weather-info\">Visibility: <span>{weatherData.visibility / 1000} km</span></p>\r\n          <p className=\"weather-info\">Pressure: <span>{weatherData.main.pressure} hPa</span></p>\r\n          <p className=\"weather-info\">Cloudiness: <span>{weatherData.clouds.all}%</span></p>\r\n          <p className=\"weather-info\">Sunrise: <span>{new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString()}</span></p>\r\n          <p className=\"weather-info\">Sunset: <span>{new Date(weatherData.sys.sunset * 1000).toLocaleTimeString()}</span></p>\r\n        </div>\r\n      ) : (\r\n        <p>Loading weather data...</p>\r\n      )}\r\n    </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchNasaData } from '../api/NasaApi';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './NasaPage.css'; \r\n\r\nconst NasaPage = () => {\r\n  const [nasaData, setNasaData] = useState(null);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getNasaData = async () => {\r\n      const data = await fetchNasaData();\r\n      setNasaData(data);\r\n\r\n    };\r\n\r\n    getNasaData();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"nasa-page-container\">\r\n      {nasaData ? (\r\n        <div>\r\n          <h1 className=\"nasa-page-header\">Today's Astronomy Picture</h1>\r\n          <h2>{nasaData.title}</h2>\r\n          <img src={nasaData.url} alt={nasaData.title} className=\"nasa-image\" />\r\n          <p className=\"nasa-text\">{nasaData.explanation}</p>\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n\r\n\r\n      {/* Similarly display data for other APIs */}\r\n    </div>\r\n\r\n    \r\n  );\r\n};\r\n\r\nexport default NasaPage;\r\n","import Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nfunction NavbarComponent() {\r\n  return (\r\n    <Navbar expand=\"lg\" className=\"bg-body-tertiary\">\r\n      <Container>\r\n        <Navbar.Brand as={Link} to=\"/\">Star Gazer</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link as={Link} to=\"/\">Weather</Nav.Link>\r\n            <Nav.Link as={Link} to=\"/nasa\">NASA Today's Astronomy Picture</Nav.Link>\r\n            <Nav.Link as={Link} to=\"/nasaData\">NASA Coronal Mass Ejection (CME) Analysis</Nav.Link>\r\n            <Nav.Link as={Link} to=\"/media\">NASA Picture Search</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavbarComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { fetchCMEAnalysis } from '../api/NasaApi';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './NasaPage.css'; \r\nconst CMEAnalysis = () => {\r\n  const [cmeAnalysisData, setCmeAnalysisData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCMEData = async () => {\r\n      const data = await fetchCMEAnalysis();\r\n      setCmeAnalysisData(data);\r\n    };\r\n\r\n    getCMEData();\r\n  }, []);\r\n\r\n  const cardVariants = ['Primary', 'Secondary', 'Success', 'Danger', 'Warning', 'Info', 'Light', 'Dark'];\r\n  const borderVariants = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'dark', 'light'];\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"nasa-page-header\">NASA Coronal Mass Ejection (CME) Analysis (Recent 30 Days)</h1>\r\n      <Row xs={1} md={5} className=\"g-4 card-row\">\r\n        {cmeAnalysisData.length > 0 ? (\r\n          cmeAnalysisData.map((cme, index) => (\r\n            <Col key={index}>\r\n              <Card\r\n                bg={cardVariants[index % cardVariants.length].toLowerCase()}\r\n                border={borderVariants[index % borderVariants.length]}\r\n                text={cardVariants[index % cardVariants.length].toLowerCase() === 'light' ? 'dark' : 'white'}\r\n                style={{ width: '18rem', marginBottom: '1rem' }}\r\n              >\r\n                <Card.Body>\r\n                  <Card.Title>CME Analysis Data</Card.Title>\r\n                  <Card.Text>\r\n                    <p>Time: {cme.time21_5}</p>\r\n                    <p>Latitude: {cme.latitude}</p>\r\n                    <p>Longitude: {cme.longitude}</p>\r\n                    <p>Half Angle: {cme.halfAngle}</p>\r\n                    <p>Speed: {cme.speed}</p>\r\n                    <p>Type: {cme.type}</p>\r\n                    <p>Most Accurate: {cme.isMostAccurate ? 'Yes' : 'No'}</p>\r\n                    <p>Associated CME ID: {cme.associatedCMEID}</p>\r\n                    <p>Note: {cme.note}</p>\r\n                    <p>Catalog: {cme.catalog}</p>\r\n                    <a href={cme.link} target=\"_blank\" rel=\"noopener noreferrer\">View More</a>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        ) : (\r\n          <p>No CME Analysis Data Available</p>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CMEAnalysis;\r\n","// import logo from './logo.svg';\n//$env:NODE_OPTIONS = \"--openssl-legacy-provider\"\nimport NasaMediaCarousel from './components/NasaMediaCarousel';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport React from 'react';\nimport WeatherPage from './components/WeatherPage';\nimport NasaPage from './components/NasaPage';\nimport NavbarComponent from './components/NavbarComponent';\nimport CMEAnalysis from './components/CMEAnalysis';\nfunction App() {\n  return (\n\n    <Router>\n    <NavbarComponent />\n    <Routes>\n        <Route path=\"/\" element={<WeatherPage />} />\n        <Route path=\"/nasa\" element={<NasaPage />} />\n        <Route path=\"/nasaData\" element={<CMEAnalysis />} />\n        \n        <Route path=\"/media\" element={<NasaMediaCarousel />} />\n      </Routes>\n  </Router>\n\n  // <>\n  // <h1>Hey there! Pop in your location and let's see if it's a good night for stargazing.</h1>\n\n  //   <WeatherPage/>\n  // <h1> Astronomy Picture of the Day</h1>\n  //   <NasaPage/>\n  //   <div>\n  //     <h1>NASA Media</h1>\n  //     <NasaMediaCarousel />\n  //   </div>\n  //   </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}